from main import initialize_gemini


def generate_mermaid_diagram(prompt_path: str, api_key: str, output_path: str):
    """Generate the Mermaid diagram using the prompt and Gemini API."""
    try:
        initialize_gemini(api_key)

        # Read the prompt content generated by code2prompt
        with open(prompt_path, 'r') as file:
            prompt_content = file.read()

        # Generate Mermaid diagram with Gemini
        generation_config = {
            "temperature": 0.7,
            "top_p": 0.9,
            "top_k": 50,
            "max_output_tokens": 2048,
            "response_mime_type": "text/plain"
        }

        model = genai.GenerativeModel(
            model_name="gemini-1.5-flash",
            generation_config=generation_config,
        )

        chat_session = model.start_chat(history=[])
        response = chat_session.send_message(prompt_content)
        ai_response = response.text

        # Save the Mermaid diagram to a file
        with open(output_path, 'w') as file:
            file.write(f"%% Mermaid Diagram\n{ai_response}")

        print(f"Mermaid diagram generated and saved to {output_path}")
        return ai_response
    except Exception as e:
        print(f"Error generating Mermaid diagram: {e}")
        return None